# 10x10 정수 배열에서 모든 원소는 0이고 테두리만 1이다. 이 배열을 생성하라.
import numpy as np
arr1010 = np.ones((10,10), dtype=np.uint8)
arr1010[1:9,1:9] = 0
print(arr1010)

arr10101 = np.zeros((10,10), dtype=np.uint8)
arr10101[:,(0,-1)] = 1
arr10101[(0,-1),:]=1
print(arr10101)

# 1에서 100 까지의 난수 정수를 원소로 갖는 10x10 배열로 만들고 50에서  60 까지의 원소만 추출하여 출력한다.
import random as rnd
arrrnd = np.random.randint(1,100, (10,10))
B = arrrnd[arrrnd>50]
C = B[B<=60]
print(C)

# 1에서 9 까지의 난수 정수를  원소로 갖는  5x5 배열에서 원소 5의 위치를 구하는 프로그램을 작성하라.  
rnd19 = np.random.randint(1,9, (5,5))
print(rnd19)
pos = np.where(rnd19==5)
print(pos)
for r,c in zip(pos[0],pos[1]):
    print(r, c)

# 다음 3 차원 배열을 flatten 함수로 1 차원 배열로 바꾸어라. 단, C와 Fortran언어 순서를 각각 적용한다. 

# 1에서 100까지의 정수로 10x10 배열을 만든다.  그 후 25개의 2x2 짜리 배열로 잘라내고 무작위로 섞은 후 다시 10x10  배열을 만든다.

# 그림의 체스판과 같이 20x20의 흑백 모자이크가 들어간 100x200 크기의  이진 이미지를 만들어보자. 20x20 배열인 black 및 white 타일을 각각 만들고
# numpy의 block 메서드에 리스트 함축을 적용한다.

# 삼각형의 세 점이 (0,0), (10,0), (0,10)이라고 할 때 x, y를 모두 -5에서 15까지 0.5간격으로 바꾸면서 점을 생성하여 삼각형 내부를 검사하고 점이 내부이면 빨간색 원으로 외부이면 노란색 x표를 한다.

# 256x256 이미지를 numpy 배열로 생성하는데 그림과 같이 열 방향으로 밝기가 0에서 255까지 바뀌게 하여 그라데이션을 만든다. 


# 그림과 같이 256x256 크기의 회색조 이미지의 밝기는 128이다. 사각형을 그리기 위하여 (50,50)에서 (205,205) 까지의 밝기를 255로 바꾼다. 

# 그림과 같이 256x256 크기의 칼라 이미지를 생성하는데 열방향으로 색상은 (0,128,50)에서 (155,128,50) 으로 blue 색만 바뀐다. 중앙에 사각형을 그리기 위하여 (50,50)에서 (205,205) 까지의 색상을 (0,128,255)로 바꾼다. 

# 아래 이미지 “cat.jpg”를 읽어서 원래의 이미지와 상하, 좌우 반전된 이미지를 각각 표시하라.

#

#

#

#

#